{
  "info": {
    "name": "Books REST API",
    "description": "A comprehensive REST API for managing books with full CRUD operations",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Welcome",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3000/",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": [""]
        },
        "description": "Get API welcome message and available endpoints"
      }
    },
    {
      "name": "Get All Books",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3000/books",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["books"]
        },
        "description": "Retrieve all books from the API"
      }
    },
    {
      "name": "Get All Books with Search",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3000/books?search=gatsby",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["books"],
          "query": [
            {
              "key": "search",
              "value": "gatsby"
            }
          ]
        },
        "description": "Search books by title or author"
      }
    },
    {
      "name": "Get All Books with Genre Filter",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3000/books?genre=fiction",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["books"],
          "query": [
            {
              "key": "genre",
              "value": "fiction"
            }
          ]
        },
        "description": "Filter books by genre"
      }
    },
    {
      "name": "Get Book by ID",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3000/books/1",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["books", "1"]
        },
        "description": "Get a specific book by its ID"
      }
    },
    {
      "name": "Create New Book",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"title\": \"The Hobbit\",\n  \"author\": \"J.R.R. Tolkien\",\n  \"year\": 1937,\n  \"genre\": \"Fantasy\"\n}"
        },
        "url": {
          "raw": "http://localhost:3000/books",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["books"]
        },
        "description": "Create a new book with required and optional fields"
      }
    },
    {
      "name": "Create Book (Minimal)",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"title\": \"Pride and Prejudice\",\n  \"author\": \"Jane Austen\"\n}"
        },
        "url": {
          "raw": "http://localhost:3000/books",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["books"]
        },
        "description": "Create a book with only required fields (title and author)"
      }
    },
    {
      "name": "Update Book",
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"title\": \"The Hobbit: An Unexpected Journey\",\n  \"author\": \"J.R.R. Tolkien\",\n  \"year\": 1937,\n  \"genre\": \"Fantasy\"\n}"
        },
        "url": {
          "raw": "http://localhost:3000/books/1",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["books", "1"]
        },
        "description": "Update an existing book by ID"
      }
    },
    {
      "name": "Delete Book",
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "http://localhost:3000/books/1",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["books", "1"]
        },
        "description": "Delete a book by ID"
      }
    },
    {
      "name": "Get Non-existent Book",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3000/books/999",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["books", "999"]
        },
        "description": "Test error handling for non-existent book"
      }
    },
    {
      "name": "Create Book with Invalid Data",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"title\": \"\",\n  \"author\": \"\",\n  \"year\": \"invalid\"\n}"
        },
        "url": {
          "raw": "http://localhost:3000/books",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["books"]
        },
        "description": "Test validation with invalid data"
      }
    },
    {
      "name": "Update Non-existent Book",
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"title\": \"Updated Title\",\n  \"author\": \"Updated Author\"\n}"
        },
        "url": {
          "raw": "http://localhost:3000/books/999",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["books", "999"]
        },
        "description": "Test error handling when updating non-existent book"
      }
    },
    {
      "name": "Delete Non-existent Book",
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "http://localhost:3000/books/999",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["books", "999"]
        },
        "description": "Test error handling when deleting non-existent book"
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000"
    }
  ]
}
